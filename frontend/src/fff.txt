import React from 'react';
import { Card } from 'react-bootstrap';

const JobList = ({ jobs }) => {
  return (
    <div>
      {jobs.length === 0 ? (
        <p>No jobs found.</p>
      ) : (
        jobs.map(job => (
          <Card key={job.id} className="mb-3">
            <Card.Body>
              <Card.Title>{job.title}</Card.Title>
              <Card.Text>{job.location} | {job.type} | {job.level} | {job.language}</Card.Text>
            </Card.Body>
          </Card>
        ))
      )}
    </div>
  );
};

export default JobList;



    <Form>
      <Form.Group className="mb-3">
        <Form.Label>نوع الحساب :</Form.Label>
        <Form.Control style={{width:'330px'}} type="text" name="location" value={filters.location} onChange={handleFilterChange} />
      </Form.Group>
      <Form.Group className="mb-3">
        <Form.Label>Type:</Form.Label>
        <Form.Control style={{width:'330px'}} type="text" name="type" value={filters.type} onChange={handleFilterChange} />
      </Form.Group>
      <Form.Group className="mb-3">
        <Form.Label>Level:</Form.Label>
        <Form.Control style={{width:'330px'}} type="text" name="level" value={filters.level} onChange={handleFilterChange} />
      </Form.Group>
      <Form.Group className="mb-3">
        <Form.Label>Language:</Form.Label>
        <Form.Control style={{width:'330px'}} type="text" name="language" value={filters.language} onChange={handleFilterChange} />
      </Form.Group>
    </Form>



// Filters.js
import React from 'react';
import { Form } from 'react-bootstrap';

const Filters = ({ filters, onFilterChange }) => {
  const handleFilterChange = (event) => {
    const { name, value } = event.target;
    onFilterChange(name, value);
  };

  return (
    <Form>
      <Form.Group className="mb-3">
        <Form.Label>Location:</Form.Label>
        <Form.Control type="text" name="location" value={filters.location} onChange={handleFilterChange} />
      </Form.Group>
      <Form.Group className="mb-3">
        <Form.Label>Type:</Form.Label>
        <Form.Control type="text" name="type" value={filters.type} onChange={handleFilterChange} />
      </Form.Group>
      <Form.Group className="mb-3">
        <Form.Label>Level:</Form.Label>
        <Form.Control type="text" name="level" value={filters.level} onChange={handleFilterChange} />
      </Form.Group>
      <Form.Group className="mb-3">
        <Form.Label>Language:</Form.Label>
        <Form.Control type="text" name="language" value={filters.language} onChange={handleFilterChange} />
      </Form.Group>
    </Form>
  );
};

export default Filters;










import React, { useState, useEffect } from 'react';
import JobList from './JobList';
import Filters from './Filters';
import Container from 'react-bootstrap/Container';
import Row from 'react-bootstrap/Row';
import Col from 'react-bootstrap/Col';

function Social() {
  const [jobs, setJobs] = useState([]);
  const [filters, setFilters] = useState({
    location: '',
    type: '',
    level: '',
    language: ''
  });

  useEffect(() => {
    const fetchData = async () => {
      try {
        // Replace with actual API endpoint or local data
        // const response = await axios.get('https://api.example.com/jobs');
        const mockData = [
          { id: 1, title: 'Frontend Developer', location: 'Remote', type: 'Full-time', level: 'Senior', language: 'JavaScript' },
          { id: 2, title: 'Backend Developer', location: 'New York', type: 'Part-time', level: 'Junior', language: 'Python' },
          // Add more mock data or fetch from API
        ];
        setJobs(mockData);
      } catch (error) {
        console.error('Error fetching job listings:', error);
      }
    };

    fetchData();
  }, []);

  const handleFilterChange = (filterType, value) => {
    setFilters({ ...filters, [filterType]: value });
  };

  const filteredJobs = jobs.filter(job =>
    (filters.location === '' || job.location.toLowerCase().includes(filters.location.toLowerCase())) &&
    (filters.type === '' || job.type.toLowerCase() === filters.type.toLowerCase()) &&
    (filters.level === '' || job.level.toLowerCase() === filters.level.toLowerCase()) &&
    (filters.language === '' || job.language.toLowerCase() === filters.language.toLowerCase())
  );

    return (
      <>
    <Container>
      {/* Stack the columns on mobile by making one full-width and the other half-width */}
      <Row>
        <Col xs={6} md={4}>
        <Filters filters={filters} onFilterChange={handleFilterChange} />
        </Col>
        <Col xs={12} md={8}>
        <JobList jobs={filteredJobs} />
        </Col>
      </Row>
    </Container>
      </>
    );
  }
  
  export default Social;



    <Form>
        <h4 style={{marginTop:marginTopValue,marginBottom:marginBottomValue}}>البحث المخصص</h4>
      <Form.Group className="mb-3">
        <Form.Label>نوع الحساب:</Form.Label>
        <Form.Control style={{width:'330px'}} type="text" name="location" value={filters.location} onChange={handleFilterChange} />
      </Form.Group>
      <Form.Group className="mb-3">
        <Form.Label>كلمة البحث:</Form.Label>
        <Form.Control style={{width:'330px'}} type="text" name="type" value={filters.type} onChange={handleFilterChange} />
      </Form.Group>
      <Form.Group className="mb-3">
        <Form.Label>إخفاء بائعين:</Form.Label>
        <Form.Control style={{width:'330px'}} type="text" name="level" value={filters.level} onChange={handleFilterChange} />
      </Form.Group>
      <Form.Group className="mb-3">
        <Form.Label>الفئة السعرية:</Form.Label>
        <Form.Control style={{width:'330px'}} type="text" name="language" value={filters.language} onChange={handleFilterChange} />
      </Form.Group>
    </Form>




 <Navbar collapseOnSelect expand="lg" >
      <Container>
        <Navbar.Toggle aria-controls="responsive-navbar-nav" />
        <Navbar.Collapse id="responsive-navbar-nav">
          <Nav className="me-auto">
          <Form>
        <h4 style={{marginTop:marginTopValue,marginBottom:marginBottomValue,color:'rgb(97, 100, 255)'}}>البحث المخصص</h4>
        <Form.Group className="mb-3">
          <Form.Label>نوع الحساب:</Form.Label>
          <Form.Control style={{width:'300px'}} type="text" name="location" value={filters.location} onChange={handleFilterChange} />
        </Form.Group>
        <Form.Group className="mb-3">
          <Form.Label>كلمة البحث:</Form.Label>
          <Form.Control style={{width:'300px'}} type="text" name="type" value={filters.type} onChange={handleFilterChange} />
        </Form.Group>
        <Form.Group className="mb-3">
          <Form.Label>إخفاء بائعين:</Form.Label>
          <Form.Control style={{width:'300px'}} type="text" name="level" value={filters.level} onChange={handleFilterChange} />
        </Form.Group>
        <Form.Group className="mb-3">
          <Form.Label>الفئة السعرية:</Form.Label>
          <Form.Control style={{width:'300px'}} type="text" name="language" value={filters.language} onChange={handleFilterChange} />
        </Form.Group>
      </Form>
          </Nav>
  
        </Navbar.Collapse>
      </Container>
    </Navbar>